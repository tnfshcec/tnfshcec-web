/* Write your global styles here, in PostCSS syntax */
@tailwind base;
@tailwind components;
@tailwind utilities;
@tailwind variants;

@layer base {
  :root {
    --text: 13 26 28; /* #0d1a1c */
    --background: 245 250 250; /* #f5fafa */
    --primary: 49 68 104; /* #314468 */
    --secondary: 224 231 240; /* #e0e7f0 */
    --accent: 39 92 98; /* #275c62 */
    --success: 149 192 48; /* #95c030 */
    --warning: 201 156 8; /* #c99c08 */
    --error: 218 138 134; /* #da8a86 */
  }
  .dark {
    --text: 227 240 242; /* #e3f0f2 */
    --background: 5 10 10; /* #050a0a */
    --primary: 151 170 206; /* #97aace */
    --secondary: 15 22 31; /* #0f161f */
    --accent: 157 209 216; /* #9dd1d8 */
    --success: 164 207 63; /* #a4cf3f */
    --warning: 247 202 54; /* #f7ca36 */
    --error: 121 41 37; /* #792925 */
  }
}

@layer components {
  .btn-accent {
    @apply rounded p-2 transition-[border-color,shadow];
    @apply border border-accent/80 text-accent;
    @apply hover:border-accent hover:shadow-glow hover:shadow-accent/40 active:shadow-accent/60;
  }
  .btn-text {
    @apply rounded p-2 transition-[border-color,shadow];
    @apply border border-text/80 text-text;
    @apply hover:border-text hover:shadow-glow hover:shadow-text/40 active:shadow-text/60;
  }
  .icon-flex {
    @apply flex items-center gap-2;
  }
}

:root {
  @apply scroll-pt-20 overflow-auto bg-background text-text motion-safe:scroll-smooth;
}

::selection {
  @apply bg-primary/60;
}

/* markdown content styles */

.prose {
  @apply prose-blockquote:text-xl prose-pre:my-0;
}

.prose input[type="checkbox"] {
  @apply rounded border-text/60 bg-transparent checked:bg-primary focus:ring-accent/60;
}

.prose ul.contains-task-list {
  @apply list-none pl-0;
}

.prose li.task-list-item input {
  @apply mr-2;
}

.prose :not(pre) > code {
  @apply bg-secondary;
}

.prose code > span.line.highlighted {
  @apply -mx-4 inline-block w-[calc(100%_+_2rem)] bg-primary/20 px-4;
}

.prose code > span.line.diff.remove {
  @apply -mx-4 inline-block w-[calc(100%_+_2rem)] bg-error/20 px-4;
  @apply after:absolute after:left-1 after:text-error after:content-['-'];
}
.prose code > span.line.diff.add {
  @apply -mx-4 inline-block w-[calc(100%_+_2rem)] bg-success/20 px-4;
  @apply after:absolute after:left-1 after:text-success after:content-['+'];
}

.prose span.spoiler {
  @apply blur-sm transition-['filter'] hover:blur-none;
}

/* codeblock numbers */

.prose .numbers code {
  counter-reset: step;
  counter-increment: step 0;
}

.prose .numbers code .line::before {
  content: counter(step);
  counter-increment: step;
  width: 1rem;
  margin-right: 0.75rem;
  display: inline-block;
  text-align: right;
}

/* vim: set ft=css: */
